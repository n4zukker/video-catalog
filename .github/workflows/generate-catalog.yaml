name: 'Create the youtube catalog page'
on:
  workflow_dispatch:
  push:
    paths:
      - '**.jq'
      - 'content/**'

jobs:
  fileId:
    runs-on: 'ubuntu-latest'
    outputs:
      FILE_ID: "${{join(steps.*.outputs.FILE_ID,'')}}"

    steps:
      -
        name: 'Other branch'
        id: 'other'
        if: "!endsWith(github.ref, '/main')"
        run: |
          echo "FILE_ID=1492243489238" >>"${GITHUB_OUTPUT}"

      -
        name: 'Main branch'
        id: 'main'
        if: "!endsWith(github.ref, '/main')"
        run: |
          echo "FILE_ID=1494188896273" >>"${GITHUB_OUTPUT}"

  catalog:
    runs-on: 'ubuntu-latest'

    steps:
      -
        name: 'Checkout from github'
        uses: 'actions/checkout@v4'

      -
        name: 'Install jq'
        shell: 'bash'
        run: |
          which jq || (
            sudo apt-get update
            sudo apt-get install jq
          )

      -
        name: 'Install pandoc'
        shell: 'bash'
        run: |
          sudo apt-get update
          sudo apt-get install pandoc

      -
        name: 'Install node'
        shell: 'bash'
        run: |
          sudo apt-get update
          sudo apt-get install nodejs npm

      -
        name: 'Install pino-pretty'
        shell: 'bash'
        run: |
          sudo npm -g install pino-pretty

      -
        name: 'Get node packages'
        shell: 'bash'
        run: |
          npm ci

      -
        name: 'Generate markdown'
        shell: 'bash'
        env:
          VIDEO_DB: 'content/video-list.json'
          VIDEO_MD: 'build/video-list.md'
          TZ: 'America/New_York'
        run: |
          mkdir -p build
          jq --from-file 'src/videos-md.jq' --slurp "${VIDEO_DB}" --raw-output > "${VIDEO_MD}"
          wc 'build/video-list.md'

      -
        name: 'Generate html'
        shell: 'bash'
        env:
          VIDEO_MD: 'build/video-list.md'
          VIDEO_HTML: 'build/video-list.html'
        run: |
          pandoc '--verbose' '--from=markdown+pipe_tables' "${VIDEO_MD}" -o "${VIDEO_HTML}"
          wc build/*

      -
        name: 'Upload to box.com'
        shell: 'bash'
        env:
          UPLOAD_FILE: 'build/video-list.html'
          UPLOAD_ID: '${{ needs.fileId.outputs.FILE_ID }}'
          BOX_CONFIG_JSON: '${{ secrets.BOX_CONFIG_JSON }}'
        run: |
          export BOX_CONFIG="$(mktemp '--suffix=.json')"
          cat <<<"${BOX_CONFIG_JSON}" >"${BOX_CONFIG}"
          rc='0'
          node src/box.js || rc="$?"
          rm "${BOX_CONFIG}"
          exit "${rc}"
